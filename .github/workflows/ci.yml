name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x, 22.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
        
    - name: Install dependencies
      run: yarn install --frozen-lockfile
      
    - name: Run ESLint
      run: yarn lint
      
    - name: Run Prettier check
      run: yarn format --check
      
    - name: Run TypeScript type checking
      run: yarn check
      
    - name: Run tests
      run: yarn test
      env:
        NODE_ENV: test
        
    - name: Build application
      run: yarn build

  security-audit:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'yarn'
        
    - name: Install dependencies
      run: yarn install --frozen-lockfile
      
    - name: Run security audit
      run: yarn audit --level moderate
      continue-on-error: true

  docker-build:
    runs-on: ubuntu-latest
    needs: [test-and-build]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Build Docker image
      run: docker build -t sprint-sync-api:latest .
        
    - name: Test Docker image health
      run: |
        docker run --rm -d --name test-container -p 3000:3000 sprint-sync-api:latest
        sleep 15
        curl -f http://localhost:3000/api/health || exit 1
        docker stop test-container
